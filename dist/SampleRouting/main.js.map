{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/bdo-form-header/bdo-form-header.component.css","webpack:///./src/app/bdo-form-header/bdo-form-header.component.html","webpack:///./src/app/bdo-form-header/bdo-form-header.component.ts","webpack:///./src/app/calendar-type/calendar-type.component.css","webpack:///./src/app/calendar-type/calendar-type.component.html","webpack:///./src/app/calendar-type/calendar-type.component.ts","webpack:///./src/app/main-nav/main-nav.component.css","webpack:///./src/app/main-nav/main-nav.component.html","webpack:///./src/app/main-nav/main-nav.component.ts","webpack:///./src/app/mid-request/mid-request.component.css","webpack:///./src/app/mid-request/mid-request.component.html","webpack:///./src/app/mid-request/mid-request.component.ts","webpack:///./src/app/new-affiliation/new-affiliation.component.css","webpack:///./src/app/new-affiliation/new-affiliation.component.html","webpack:///./src/app/new-affiliation/new-affiliation.component.ts","webpack:///./src/app/new-affiliation/new-affiliation.service.ts","webpack:///./src/app/pos-request-stepper/pos-request-stepper.component.css","webpack:///./src/app/pos-request-stepper/pos-request-stepper.component.html","webpack:///./src/app/pos-request-stepper/pos-request-stepper.component.ts","webpack:///./src/app/pos-request/pos-request.component.css","webpack:///./src/app/pos-request/pos-request.component.html","webpack:///./src/app/pos-request/pos-request.component.ts","webpack:///./src/app/services/pos-fields.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NewAffiliationComponent } from './new-affiliation/new-affiliation.component';\nimport {PosRequestComponent} from  './pos-request/pos-request.component';\nimport { PosRequestStepperComponent } from './pos-request-stepper/pos-request-stepper.component';\nconst routes: Routes = [\n{path:'na',component:NewAffiliationComponent},\n{path:'pos',component:PosRequestComponent},\n{path:'posStep',component:PosRequestStepperComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".mat-menu-item{\\r\\n\\tcolor: #0d47a1;\\r\\n\\tfont-size: 13px;\\r\\n}\\r\\n\\r\\n.example-container {\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  margin: 10px;\\r\\n\\r\\n  /* border: 1px solid #555; */\\r\\n}\\r\\n\\r\\n.mat-toolbar-row{\\r\\n\\tpadding-top: 15px;\\r\\n}\\r\\n\\r\\n.mat-icon{\\r\\n\\r\\n\\tcolor: white;\\r\\n}\\r\\n\\r\\n.mat-headline{\\r\\n\\tcolor: #0d47a1;\\r\\n}\\r\\n\\r\\n/* .mat-toolbar-main  {\\r\\n   position: fixed;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  z-index: 2;\\r\\n  \\r\\n} */\\r\\n\\r\\n/* .sidenav-container {\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  margin: 10px;\\r\\n  border: 1px solid #555; \\r\\n} */\\r\\n\\r\\nhtml, body{\\r\\n\\r\\n height: 100%;\\r\\n}\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n<!-- <mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav [mode]=\\\"side\\\">\\n  \\t\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n\\n <mat-toolbar color=\\\"primary\\\" class=\\\"mat-elevation-z5\\\">\\n  \\t  \\t \\n  \\t<span flex>Merchant Acquiring System</span>\\n\\n\\t\\t\\t<button mat-icon-button  [matMenuTriggerFor]=\\\"menu\\\"><mat-icon>description</mat-icon></button>\\n\\t\\t\\t\\t<mat-menu #menu=\\\"matMenu\\\">\\n\\t\\t\\t\\t  <a routerLink=\\\"/na\\\" mat-menu-item>New Affiliation</a>\\n\\t\\t\\t\\t  <button mat-menu-item>Branch Affiiation</button>\\n          \\n          \\t\\t\\t\\t<a routerLink=\\\"/pos\\\" mat-menu-item>POS Request</a>\\n\\t\\t\\t\\t  <button mat-menu-item>Additional Facility</button>\\n\\t\\t\\t\\t  <button mat-menu-item>File Maintenance</button>\\n\\t\\t\\t\\t</mat-menu>\\n\\t\\t\\t\\t<button mat-icon-button><mat-icon>settings</mat-icon></button>\\n\\t\\t\\t\\t<button mat-icon-button><mat-icon>assignment</mat-icon></button>\\n\\t\\t<span fxFlex></span>\\n  \\n\\t\\t\\t<button type=\\\"submit\\\"  mat-icon-button ><mat-icon>search</mat-icon> </button> \\n  \\t \\t\\n\\n  \\n\\n  </mat-toolbar>\\n \\n\\n <router-outlet></router-outlet>  \\n\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n -->\\n \\n<app-main-nav >\\n<!-- <button mat-raised-button color=\\\"accent\\\"  (click)=\\\"drawer.toggle()\\\">Click Me</button> -->\\n<!-- <div class=\\\"main-nav-container\\\">\\n\\t \\n</div> -->\\n    <router-outlet></router-outlet>\\t\\n\\n\\n\\n</app-main-nav>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {BrowserAnimationsModule}  from '@angular/platform-browser/animations';\nimport {FormlyModule} from '@ngx-formly/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {FormlyMaterialModule} from '@ngx-formly/material';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {MatToolbarModule,MatTooltipModule,} from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatListModule} from '@angular/material/list';\nimport { NewAffiliationComponent } from './new-affiliation/new-affiliation.component';\nimport { PosRequestComponent } from './pos-request/pos-request.component';\nimport { MatDatepickerModule , MatInputModule, MatNativeDateModule,MatTableModule,\nMatTabsModule,MatStepperModule} from '@angular/material';\nimport { CalendarTypeComponent } from './calendar-type/calendar-type.component';\nimport { BdoFormHeaderComponent } from './bdo-form-header/bdo-form-header.component';\nimport { MainNavComponent } from './main-nav/main-nav.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MidRequestComponent } from './mid-request/mid-request.component';\nimport { PosRequestStepperComponent } from './pos-request-stepper/pos-request-stepper.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NewAffiliationComponent,\n    PosRequestComponent,\n    CalendarTypeComponent,\n    BdoFormHeaderComponent,\n    MainNavComponent,\n    MidRequestComponent,\n    PosRequestStepperComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    \n    FormlyModule.forRoot(\n        {\n      types: [{\n        name: 'calendar',\n        component: CalendarTypeComponent\n        // wrappers: ['form-field'],\n      }]\n    }\n      ),\n    BrowserAnimationsModule,\n    FormlyMaterialModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatCardModule,\n    FlexLayoutModule,\n    MatIconModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatExpansionModule,\n    MatDividerModule,\n    MatListModule,\n    MatDatepickerModule,\n    MatInputModule,\n    MatNativeDateModule,\n    LayoutModule,\n    MatTooltipModule,\n    MatTableModule,\n    MatTabsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".container{\\r\\n\\r\\n\\tdisplay: flex;\\r\\n\\t justify-content: flex-start;  \\r\\n\\t align-items: start;\\r\\n\\t margin-bottom: 5px;\\r\\n\\t  border-bottom: 2px #0d47a1 solid; \\r\\n\\r\\n}\\r\\n.mat-display-1{\\r\\n\\tcolor: #0d47a1;\\r\\n\\r\\n}\\r\\n.request-menu-container{\\r\\n\\r\\n\\tdisplay: flex;\\r\\n\\tflex-direction:column;\\r\\n\\tmax-width: 500px !important;\\r\\n}\\r\\n/* .mat-menu{\\r\\n\\t\\tpadding: 0 !important;\\r\\n\\t\\tmax-width: 300px;\\r\\n\\r\\n} */\\r\\n.request-mat-icon{\\r\\n\\tpadding: 0;\\r\\n\\tcolor: #0d47a1;\\r\\n\\t/* color: whitesmoke; */\\r\\n\\r\\n}\\r\\n.mat-menu-item{\\r\\n\\r\\n\\tfont-size: 14px !important;\\r\\n\\tpadding-left: 3px;\\r\\n}\\r\\n.request-mat-toolbar{\\r\\n\\r\\n\\t background-color:  inherit !important;\\r\\n}\\r\\n.header-logo{\\r\\n\\r\\n\\tmargin-left: 2px;\\r\\n\\tmargin-top: 2px;\\r\\n\\theight: 65px;\\r\\n    width: 120px;\\r\\n    \\r\\n}\"","module.exports = \"<div class=\\\"container\\\" \\n     >\\n  <div><img src=\\\"assets/img/bdoLogo.png\\\" class=\\\"header-logo\\\" alt=\\\"\\\">  </div>\\n  <div style=\\\"margin-left:10px;\\\"> <span class=\\\"mat-display-1\\\">{{text}}</span> \\n  \\t<br>\\n  \\t<span style=\\\"color:orange\\\" class=\\\"mat-subheading-2\\\">{{sub_text}}</span>\\n  </div>\\n  <span fxFlex ></span>\\n\\n  <mat-toolbar class=\\\"request-mat-toolbar\\\" fxFlex fxShow=”true” fxHide.sm=”true”>\\n  \\t\\n  \\t<div  fxLayout=\\\"row\\\"  fxLayoutGap=\\\"6px\\\" fxLayoutAlign=\\\"space-around center\\\">\\n  \\t\\t<span fxFlex ></span>\\n  \\t\\t<button mat-fab style=\\\"font-size: 12px;\\\" color=\\\"primary\\\" matTooltip=\\\"Approve Request\\\" >\\n      <span style=\\\"color:white\\\">Approve</span>  \\n      </button>\\n  \\t\\t<button mat-fab   style=\\\"font-size: 12px;\\\" matTooltip=\\\"Decline request\\\">\\n        <!-- <mat-icon  class=\\\"request-mat-icon\\\">clear</mat-icon> -->\\n        <span style=\\\"color:white\\\">Decline</span>  \\n        </button>\\n  \\t\\t<button mat-mini-fab style=\\\"font-size: 12px;\\\" matTooltip=\\\"Return Request\\\"><mat-icon  class=\\\"request-mat-icon\\\">subdirectory_arrow_left</mat-icon></button>\\n  \\t\\t<button mat-mini-fab   matTooltip=\\\"Submit Request\\\" ><mat-icon  class=\\\"request-mat-icon\\\">arrow_forward</mat-icon></button>\\n\\n  \\t<!-- \\t<button mat-button color=\\\"primary\\\" matTooltip=\\\"Approve Request\\\" ><mat-icon  class=\\\"request-mat-icon\\\">done</mat-icon>Approve</button>\\n      <button mat-button color=\\\"primary\\\" matTooltip=\\\"Decline request\\\"><mat-icon  class=\\\"request-mat-icon\\\">clear</mat-icon>Decline</button>\\n      <button mat-button color=\\\"primary\\\" matTooltip=\\\"Return Request\\\"><mat-icon  class=\\\"request-mat-icon\\\">subdirectory_arrow_left</mat-icon>Return </button>\\n      <button mat-button  color=\\\"primary\\\" matTooltip=\\\"Submit Request\\\" ><mat-icon  class=\\\"request-mat-icon\\\">arrow_forward</mat-icon>Submit</button> -->\\n  \\t</div>\\n  </mat-toolbar>\\n\\n  <div>\\n  \\t<button fxFlex fxShow=”true” fxHide.lg=”true” mat-mini-fab [matMenuTriggerFor]=\\\"requestMenu\\\" >\\n  \\t\\t\\t<mat-icon color=\\\"primary\\\">menu</mat-icon>\\n  \\t</button> \\n  \\t\\n  \\t<mat-menu class=\\\"request-menu-container\\\" #requestMenu=\\\"matMenu\\\" style=\\\"padding:0;\\\">\\n  \\t\\n  \\t<div  fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start\\\">\\n  \\t\\t\\n  \\t\\t<button mat-menu-item color=\\\"primary\\\" matTooltip=\\\"Approve Request\\\" ><mat-icon class=\\\"request-mat-icon\\\" >done</mat-icon>Approve</button>\\n  \\t\\t<button mat-menu-item  color=\\\"primary\\\" matTooltip=\\\"Decline request\\\"><mat-icon  class=\\\"request-mat-icon\\\" >clear</mat-icon>Decline</button>\\n  \\t\\t<button mat-menu-item  color=\\\"primary\\\" matTooltip=\\\"Return Request\\\" matTooltip=\\\"Return Request\\\"><mat-icon  class=\\\"request-mat-icon\\\" >subdirectory_arrow_left</mat-icon>Return</button>\\n  \\t\\t<button mat-menu-item  color=\\\"primary\\\" matTooltip=\\\"Submit Request\\\"  matTooltip=\\\"Submit Request\\\"><mat-icon  class=\\\"request-mat-icon\\\">arrow_forward</mat-icon>Submit</button>\\n\\n  \\t\\t\\n  \\t</div>\\n  \\t  \\n\\t</mat-menu>\\n  \\t\\n  </div>\\n  \\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bdo-form-header',\n  templateUrl: './bdo-form-header.component.html',\n  styleUrls: ['./bdo-form-header.component.css'],\n  inputs: ['text','sub_text'],\n})\nexport class BdoFormHeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"div {\\r\\n  display: flex;\\r\\n}\\r\\n.mat-calendar-input-element {\\r\\n   font-family: Arial, Helvetica, sans-serif;\\r\\n    background: 0 0;\\r\\n    color: currentColor;\\r\\n    border: none;\\r\\n    outline: 0;\\r\\n    padding: 0 !important;\\r\\n    margin: 0 !important;\\r\\n    width: 100%;\\r\\n    max-width: 100%;\\r\\n    vertical-align: bottom;\\r\\n    text-align: inherit;\\r\\n}\"","module.exports = \"<mat-form-field   class='{{className}} mat-body-1'>\\n\\n  <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"{{to.label}}\\\"\\n\\t[formControl]=\\\"formControl\\\" \\n\\t      [formlyAttributes]=\\\"field\\\"\\n  >\\n  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n  <mat-datepicker #picker></mat-datepicker>\\n</mat-form-field>\\n\"","import { Component, ViewChild } from '@angular/core';\nimport { FieldType } from '@ngx-formly/material';\nimport { MatInput } from '@angular/material';\nimport { startWith, switchMap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n// import {MatDatepickerModule} from '@angular/material/datepicker';\n\n\n@Component({\n  selector: 'app-calendar-type',\n  templateUrl: './calendar-type.component.html',\n  styleUrls: ['./calendar-type.component.css']\n})\nexport class CalendarTypeComponent extends FieldType {\n@ViewChild(MatInput) formFieldControl: MatInput;\n //value: Observable<any[]>;\n  // filter: Observable<any[]>;\n  ngOnInit() {\n  \t// this.filter = this.formControl.valueChanges\n   //    .pipe(\n   //      startWith(''),\n   //      switchMap(term => this.to.filter(term)),\n   //    );\n }\n\n}\n","module.exports = \".sidenav-container {\\n  height: 100%;\\n min-height: 671px;\\n}\\n\\n.sidenav {\\n  width: 400px;\\n  box-shadow: 3px 0 6px rgba(0,0,0,.24);\\n}\\n\\n/* @media (min-width: 900px) {\\n\\t.sidenav {\\n\\t\\tdisplay: none;\\n\\t}\\n} */\\n\\n.mat-toolbar.mat-primary{\\n  position: -webkit-sticky;\\n  position: sticky;\\n}\\n\\n.mat-toolbar  {\\n   position: fixed;\\n  top: 0;\\n  left: 0;\\n  z-index: 2;\\n  \\n}\\n\\n/* .card-container {\\n  max-width: 400px;\\n  margin: 2px;\\n}\\n */\\n\\n.mat-headline{\\n\\n\\tmargin-left: 7px;\\n\\tmargin-top: 7px;\\n}\"","module.exports = \"<mat-sidenav-container  class=\\\"sidenav-container\\\">\\n  <mat-sidenav \\n    #drawer\\n    class=\\\"sidenav\\\"\\n    fixedInViewport=\\\"false\\\"\\n    [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n    [mode]=\\\"over\\\"\\n    [opened]=\\\"false\\\"\\n    position=\\\"end\\\"\\n    >\\n   <!--  <mat-toolbar color=\\\"accent\\\">\\n          <span style=\\\"color:whitesmoke\\\">Menu</span>\\n    </mat-toolbar> -->\\n    <!-- <mat-nav-list>\\n      <a mat-list-item href=\\\"#\\\">Submit</a>\\n      <a mat-list-item href=\\\"#\\\">Return</a>\\n      <a mat-list-item href=\\\"#\\\">Decline</a>\\n    </mat-nav-list> -->\\n    \\n<!--     <mat-card class=\\\"card-container\\\">\\n      <mat-card-header>\\n        <mat-card-title>\\n            Account Information \\n        </mat-card-title>\\n        \\n      </mat-card-header>\\n      <mat-card-content fxLayout=\\\"column\\\"  fxLayoutGap=\\\"2px\\\" fxLayoutAlign=\\\"space-around start\\\">\\n       <mat-list>\\n       <mat-list-item> Name: Arnold Costamero </mat-list-item>\\n       <mat-list-item> Unit: IT DEV CLG </mat-list-item>\\n      </mat-list>\\n \\n          <button mat-flat-button color=\\\"accent\\\">Logout</button>\\n      </mat-card-content>\\n      <mat-card-actions>\\n    \\n  </mat-card-actions>\\n      \\n      \\n    \\n  </mat-card> -->\\n\\n   <div fxLayout=\\\"column\\\"  fxLayoutGap=\\\"2px\\\" fxLayoutAlign=\\\"space-around start\\\">\\n    <mat-toolbar color=\\\"accent\\\">\\n         <span style=\\\"color:whitesmoke\\\">Menu</span>\\n    </mat-toolbar>\\n       <mat-list>\\n       <mat-list-item><mat-icon color=\\\"primary\\\">face</mat-icon> Arnold Costamero </mat-list-item>\\n       <mat-list-item> Unit: IT DEV CLG </mat-list-item>\\n      </mat-list>\\n     \\n\\n          <button mat-flat-button color=\\\"accent\\\">Logout</button>\\n     \\n          \\n    </div>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    \\n     <mat-toolbar color=\\\"primary\\\"  class=\\\"mat-elevation-z5\\\">\\n          \\n    <span >Merchant Acquiring System</span>\\n\\n      <button mat-icon-button  [matMenuTriggerFor]=\\\"menu\\\"><mat-icon>description</mat-icon></button>\\n        <mat-menu #menu=\\\"matMenu\\\">\\n          <a routerLink=\\\"/na\\\" mat-menu-item>New Affiliation</a>\\n          <button mat-menu-item>Branch Affiiation</button>\\n          \\n                  <a routerLink=\\\"/pos\\\" mat-menu-item>POS Request</a>\\n          <button mat-menu-item>Additional Facility</button>\\n          <button mat-menu-item>File Maintenance</button>\\n        </mat-menu>\\n        <button mat-icon-button><mat-icon>settings</mat-icon></button>\\n        <button mat-icon-button><mat-icon>assignment</mat-icon></button>\\n    <span fxFlex></span>\\n  \\n      <button type=\\\"submit\\\"  mat-icon-button ><mat-icon>search</mat-icon> </button> \\n      <button type=\\\"button\\\" aria-label=\\\"Toggle sidenav\\\" mat-icon-button (click)=\\\"drawer.toggle()\\\"\\n       \\n        >\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">face</mat-icon>\\n      </button>\\n\\n  \\n\\n  </mat-toolbar>\\n    <ng-content></ng-content>\\n    <!-- Add Content Here -->\\n     \\n     \\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-main-nav',\n  templateUrl: './main-nav.component.html',\n  styleUrls: ['./main-nav.component.css'],\n})\nexport class MainNavComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n    \n  constructor(private breakpointObserver: BreakpointObserver) {}\n  \n  }\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"\\n<div fxLayout=\\\"column\\\"  fxLayoutGap=\\\"3px\\\" fxLayoutAlign=\\\"start end\\\" style=\\\"margin-top:7px;\\\">\\n  <mat-toolbar style=\\\"background-color: inherit\\\">\\n     <span class=\\\"mat-headline\\\">MID Request List</span>\\n    <span fxFlex></span>\\n      <button mat-mini-fab color=\\\"primary\\\" matTooltip=\\\"Create New Entry\\\">\\n    <mat-icon style=\\\"color:white\\\">add</mat-icon>\\n    \\n  </button>  \\n  </mat-toolbar>\\n  \\n  \\n<table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n\\n  <!--- Note that these columns can be defined in any order.\\n\\n  <!-- Position Column -->\\n  <ng-container matColumnDef=\\\"currency\\\">\\n    <th mat-header-cell *matHeaderCellDef> Currency  </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.currency}} </td>\\n  </ng-container>\\n\\n  <!-- Name Column -->\\n  <ng-container matColumnDef=\\\"monitorCode\\\">\\n    <th mat-header-cell *matHeaderCellDef> Monitor Code </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.monitorCode}} </td>\\n  </ng-container>\\n\\n  <!-- Weight Column -->\\n  <ng-container matColumnDef=\\\"merchantGroupCode\\\">\\n    <th mat-header-cell *matHeaderCellDef> Merchant Group Code </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.merchantGroupCode}} </td>\\n  </ng-container>\\n\\n  <!-- Symbol Column -->\\n  <ng-container matColumnDef=\\\"sfcc\\\">\\n    <th mat-header-cell *matHeaderCellDef> Service Fee Rate </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.sfcc}} </td>\\n  </ng-container>\\n        The actual rendered columns are set as a property on the row definition\\\" -->\\n <ng-container matColumnDef=\\\"controls\\\">\\n    <th mat-header-cell *matHeaderCellDef>\\n     <!--  <button mat-mini-fab> \\n        <mat-icon>menu</mat-icon>\\n      </button> -->\\n    </th>\\n    <td mat-cell *matCellDef=\\\"let row\\\">\\n      <button mat-icon-button> \\n        <mat-icon color=\\\"primary\\\">edit</mat-icon>\\n      </button>\\n       <button mat-icon-button> \\n        <mat-icon color=\\\"warn\\\">delete_forever</mat-icon>\\n      </button>\\n    </td>\\n  </ng-container>\\n\\n \\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\\n</div>\\n\\n  \\n\"","import { Component, OnInit } from '@angular/core';\n\nexport interface MidRequest {\n  currency: string;\n  monitorCode: string;\n  merchantGroupCode: string;\n  sfcc: string;\n}\nconst ELEMENT_DATA: MidRequest[] = [\n  {currency: 'PHP', monitorCode: 'OTC',merchantGroupCode:'MerchGrp4', sfcc: 'H'},\n  {currency: 'USD', monitorCode: 'Reg Inst',merchantGroupCode:'MerchGrp1Z', sfcc: 'He'},\n  {currency: 'PHP', monitorCode: '0% Inst',merchantGroupCode:'', sfcc: 'Li'},\n  {currency: 'PHP', monitorCode: 'BNPL Reg',merchantGroupCode:'MerchGrp4', sfcc: 'Be'},\n  {currency: 'PHP', monitorCode: 'BNPL 0%',merchantGroupCode:'MerchGrp1Z', sfcc: 'B'}\n  \n  // {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  // {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  // {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  // {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n@Component({\n  selector: 'app-mid-request',\n  templateUrl: './mid-request.component.html',\n  styleUrls: ['./mid-request.component.css']\n})\nexport class MidRequestComponent implements OnInit {\n\ndisplayedColumns: string[] = ['currency', 'monitorCode', 'merchantGroupCode', 'sfcc','controls'];\n  dataSource = ELEMENT_DATA;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<mat-card class=\\\"mat-card-screen\\\">\\n  \\n  <mat-card-content>\\n<app-bdo-form-header [text]=\\\"title\\\" [sub_text]=\\\"subText\\\"></app-bdo-form-header>\\n <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit()\\\">\\n  <formly-form [model]=\\\"model\\\" [fields]=\\\"fields\\\" [options]=\\\"options\\\" [form]=\\\"form\\\">\\n   <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"end center\\\" fxLayoutGap=\\\"3px\\\">\\n          <button type=\\\"submit\\\" color=\\\"primary\\\" mat-raised-button >Save </button>\\n          <button type=\\\"submit\\\" color=\\\"accent\\\" mat-raised-button>Cancel</button>\\n        </div>\\n  </formly-form>\\n</form>\\n\\n\\n</mat-card-content>\\n</mat-card>\\n\\n\"","import { Component, OnInit,ViewEncapsulation } from '@angular/core';\nimport {FormGroup} from '@angular/forms';\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\nimport { NewAffiliationService } from './new-affiliation.service';\n//import {FormlyFieldConfig} from 'ng-formly';\n@Component({\n  selector: 'app-new-affiliation',\n  templateUrl: './new-affiliation.component.html',\n  styleUrls: ['./new-affiliation.component.css'],\n  encapsulation:ViewEncapsulation.None\n\n})\nexport class NewAffiliationComponent implements OnInit {\n  form = new FormGroup({});\n  model: any = {};\n  options: FormlyFormOptions = {};\n  fields:FormlyFieldConfig[];\n  title='New Affiliation';\n  subText='Create';\n      \n  constructor(private newAffiliationService: NewAffiliationService) { \n    \n     this.fields=newAffiliationService.getPosFields();\n  }\n\n  ngOnInit() {\n   \n\n  }\n\n  \n  \n  submit(model) {\n    console.log(model);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewAffiliationService {\nfields: FormlyFieldConfig[] = [\n    {\n      fieldGroupClassName: 'display-flex',\n      fieldGroup: [\n        {\n          className: 'flex-1',\n          type: 'input',\n          key: 'firstName',\n          templateOptions: {\n            label: 'First Name',\n            placeholder:'Your name'\n          },\n        },\n        {\n          className: 'flex-1',\n          type: 'input',\n          key: 'lastName',\n          templateOptions: {\n            label: 'Last Name',\n          },\n          expressionProperties: {\n            //'templateOptions.disabled': '!model.firstName',\n          },\n        },\n      ],\n    },\n    {\n      template: '<span class=\"mat-subheading-1\">Address:</span>',\n    },\n    {\n      fieldGroupClassName: 'display-flex',\n      fieldGroup: [\n        {\n          className: 'flex-1',\n          type: 'input',\n          key: 'street',\n          templateOptions: {\n            label: 'Street',\n          },\n        },\n        {\n          className: 'flex-1',\n          type: 'input',\n          key: 'cityName',\n          templateOptions: {\n            label: 'City',\n          },\n        },\n        {\n          className: 'flex-1',\n          type: 'input',\n          key: 'zip',\n          templateOptions: {\n            type: 'number',\n            label: 'Zip',\n            max: 99999,\n            min: 0,\n            pattern: '\\\\d{5}',\n          },\n        },\n      ],\n    },\n    /*{\n      template: '<hr />',\n    },*/\n    {\n      type: 'input',\n      key: 'otherInput',\n      templateOptions: {\n        label: 'Other Input',\n      },\n    },\n    {\n      type: 'checkbox',\n      key: 'otherToo',\n      templateOptions: {\n        label: 'Other Checkbox',\n      },\n    },\n  ];\n     \n  constructor() { }\n  getPosFields(): FormlyFieldConfig[]{\n\n\t\treturn this.fields;\n  }\n}\n","module.exports = \"\"","module.exports = \"<mat-vertical-stepper [linear]=\\\"isLinear\\\" #stepper>\\n  <mat-step [stepControl]=\\\"firstFormGroup\\\">\\n    <form [formGroup]=\\\"firstFormGroup\\\">\\n      <ng-template matStepLabel>Fill out your name</ng-template>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Last name, First name\\\" formControlName=\\\"firstCtrl\\\" required>\\n      </mat-form-field>\\n      <div>\\n        <button mat-button matStepperNext>Next</button>\\n      </div>\\n    </form>\\n  </mat-step>\\n  <mat-step [stepControl]=\\\"secondFormGroup\\\">\\n    <form [formGroup]=\\\"secondFormGroup\\\">\\n      <ng-template matStepLabel>Fill out your address</ng-template>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Address\\\" formControlName=\\\"secondCtrl\\\" required>\\n      </mat-form-field>\\n      <div>\\n        <button mat-button matStepperPrevious>Back</button>\\n        <button mat-button matStepperNext>Next</button>\\n      </div>\\n    </form>\\n  </mat-step>\\n  <mat-step>\\n    <ng-template matStepLabel>Done</ng-template>\\n    You are now done.\\n    <div>\\n      <button mat-button matStepperPrevious>Back</button>\\n      <button mat-button (click)=\\\"stepper.reset()\\\">Reset</button>\\n    </div>\\n  </mat-step>\\n</mat-vertical-stepper>\"","import { Component, OnInit,ViewEncapsulation } from '@angular/core';\nimport {FormBuilder,FormGroup,Validators} from '@angular/forms';\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\n\n\n@Component({\n  selector: 'app-pos-request-stepper',\n  templateUrl: './pos-request-stepper.component.html',\n  styleUrls: ['./pos-request-stepper.component.css']\n})\nexport class PosRequestStepperComponent implements OnInit {\nisLinear = false;\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n  constructor(private _formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n  \tthis.firstFormGroup = this._formBuilder.group({\n      firstCtrl: ['', Validators.required]\n    });\n    this.secondFormGroup = this._formBuilder.group({\n      secondCtrl: ['', Validators.required]\n    });\n  }\n\n}\n","module.exports = \".mat-headline{\\r\\n\\r\\n\\tcolor: #0d47a1;\\r\\n}\\r\\n\"","module.exports = \"\\n<mat-card class=\\\"mat-card-screen\\\">\\n <mat-card-content>\\n \\n  <app-bdo-form-header [text]=\\\"title\\\" [sub_text]=\\\"subText\\\"></app-bdo-form-header>\\n  \\n <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit()\\\">\\n  <formly-form [model]=\\\"model\\\" [fields]=\\\"fields\\\" [options]=\\\"options\\\" [form]=\\\"form\\\">\\n     <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"end center\\\" fxLayoutGap=\\\"3px\\\">\\n          <button type=\\\"submit\\\" color=\\\"primary\\\" mat-raised-button >Save </button>\\n          <button type=\\\"submit\\\" color=\\\"accent\\\" mat-raised-button>Cancel</button>\\n        </div>\\n  </formly-form>\\n</form>\\n<br>\\n\\n<hr>\\n<mat-tab-group>\\n  <mat-tab label=\\\"MID Request\\\"> <app-mid-request></app-mid-request>\\n</mat-tab>\\n  <mat-tab label=\\\"TID Request\\\"> \\n    <span class=\\\"mat-headline\\\" style=\\\"margin-bottom:20px;\\\">TID Request </span>\\n  </mat-tab>\\n  \\n</mat-tab-group> \\n</mat-card-content>\\n</mat-card>\\n\\n\\n\\n\\n\"","import { Component, OnInit,ViewEncapsulation } from '@angular/core';\nimport {FormGroup} from '@angular/forms';\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\nimport { PosFieldsService } from '../services/pos-fields.service';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\n\n@Component({\n  selector: 'app-pos-request',\n  templateUrl: './pos-request.component.html',\n  styleUrls: ['./pos-request.component.css']\n})\nexport class PosRequestComponent implements OnInit {\n form = new FormGroup({});\n  model: any = {};\n  options: FormlyFormOptions = {};\n  fields:FormlyFieldConfig[];\n  title='Pos Request';\n  subText='Create';    \n  constructor(private posFieldService: PosFieldsService) { \n    \n     this.fields=posFieldService.getPosFields();\n  }\n\n  ngOnInit() {\n   \n\n  }\n\n  \n  \n  submit(model) {\n    console.log(model);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PosFieldsService {\nfields: FormlyFieldConfig[] = [\n{\n                fieldGroupClassName: 'display-flex',\n                fieldGroup: [\n        {\n                    className: 'flex-1',\n                    key: 'dateEndorse',\n                    type:'calendar',\n                     templateOptions: {\n                        label: \"Date and time Endorsed\"\n                    }\n\n \n            },{\n                     className: 'flex-1',\n                    type: 'input',\n                    key: 'aoCode',\n                    expressionProperties: {\n                        'templateOptions.disabled': 'true'\n                    },\n                    templateOptions: {\n                        label: \"AO Code\"\n                    }\n                }\n\n            ]},\n\n            {\n                fieldGroupClassName: 'display-flex',\n                fieldGroup: [{\n                     className: 'flex-1',\n                    type: 'input',\n                    key: 'aoCode',\n                    expressionProperties: {\n                        'templateOptions.disabled': 'true'\n                    },\n                    templateOptions: {\n                        label: \"AO Code\"\n                    }\n                },\n                {\n                    key: 'status',\n                    type: 'input',\n                    hide: true\n                },\n                {\n                    className: 'flex-2',\n                    type: 'input',\n                    key: 'statusDesc',\n                    //ngModelAttrs: {\n                    //    readOnly: {\n                    //        bound: 'ng-readonly',\n                    //        attribute: 'ng-readonly'\n                    //    }\n                    //},\n                    expressionProperties: {\n                        'templateOptions.disabled': 'true'\n                    },\n                    templateOptions: {\n                        label: 'Status',\n                        //readOnly: true,\n                        style: \"margin-bottom: 5px; margin-top: 0;background-color:text-warning\"\n                    }\n                },\n                {\n                     className: 'flex-1',\n                    type: 'select',\n                    key: 'natureOfRequest',\n                    expressionProperties: {\n                        \n                    },\n                    templateOptions: {\n                        label: 'Nature Of Request',\n                        labelProp: 'Description',\n                        valueProp: 'NatureOfRequest_Id',\n                        options: []\n                    }\n                    \n\n                }]\n            },\n            {\n                fieldGroupClassName: 'display-flex',\n                fieldGroup: [{\n                     className: 'flex-1',\n                    type: 'input',\n                    key: 'requestorsName',\n                    expressionProperties: {\n                        'templateOptions.disabled': 'true'\n                    },\n                    templateOptions: {\n                        label: \"Requestor's Name\"\n                    }\n                },\n                    {\n                         className: 'flex-1',\n                        type: 'input',\n                        key: 'businessUnit',\n                        expressionProperties: {\n                            'templateOptions.disabled': 'true'\n                        },\n                        templateOptions: {\n                            label: 'Business Unit'\n                        }\n                    },\n                    {\n                         className: 'flex-1',\n                        type: 'input',\n                        key: 'requestorsContactNumber',\n                        expressionProperties: {\n                            'templateOptions.disabled': 'true'\n                        },\n                        templateOptions: {\n                            label: 'Contact Number'\n                        }\n                    }\n                ]\n            },\n                    {\n                        fieldGroupClassName: 'display-flex',\n                        fieldGroup: [{\n                             className: 'flex-1',\n                            type: 'select',\n                            key: 'area',\n                            expressionProperties: {\n                               // 'templateOptions.disabled': 'model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_REQUIREMENTS').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_EXCEPTIONS').Value\n                            },\n                            templateOptions: {\n                                label: 'Area',\n                                labelProp: 'Description',\n                                valueProp: 'Area_Id',\n                                options: []\n                            }\n                          \n                        },\n                            {\n                                 className: 'flex-1',\n                                type: 'select',\n                                key: 'typeOfAccount',\n                                expressionProperties: {\n                                  //  'templateOptions.disabled': 'model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_REQUIREMENTS').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_EXCEPTIONS').Value\n                                },\n                                templateOptions: {\n                                    label: 'Type Of Account',\n                                    labelProp: 'Description',\n                                    valueProp: 'TypeOfAccount_Id',\n                                    options: []\n                                }\n                                // ,\n                                // controller: function ($scope) {\n                                //     dropDown.getTypeOfAccount().success(function (data) {\n                                //         $scope.to.options = data;\n                                //     });\n                                // }\n                            },\n                            {\n                                 className: 'flex-1',\n                                type: 'input',\n                                key: 'segment',\n                                expressionProperties: {\n                                  //  'templateOptions.disabled': 'model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_REQUIREMENTS').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_EXCEPTIONS').Value\n                                },\n                                templateOptions: {\n                                    label: 'Segment'\n                                }\n                            }\n                        ]\n                    },\n                {\n                    fieldGroupClassName: 'display-flex',\n                    fieldGroup: [{\n                         className: 'flex-1',\n                        type: 'input',\n                        key: 'legalName',\n                        expressionProperties: {\n                            //'templateOptions.disabled': 'model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_REQUIREMENTS').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_EXCEPTIONS').Value\n                        },\n                        templateOptions: {\n                            label: 'Legal Name'\n                        }\n                    },\n                        {\n                             className: 'flex-1',\n                            type: 'input',\n                            key: 'Branch.DBAName',\n                            expressionProperties: {\n                             //   'templateOptions.disabled': 'model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_REQUIREMENTS').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_EXCEPTIONS').Value\n                            },\n                            templateOptions: {\n                                label: 'DBA Name'\n                            }\n                        },\n                        {\n                             className: 'flex-1',\n                            type: 'input',\n                            key: 'signage',\n                            expressionProperties: {\n                             //   'templateOptions.disabled': 'model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_REQUIREMENTS').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_EXCEPTIONS').Value\n                            },\n                            templateOptions: {\n                                label: 'Signage'\n                            }\n                        }\n                    ]\n                },\n                {\n                    fieldGroupClassName: 'display-flex',\n                    fieldGroup: [{\n                         className: 'flex-1',\n                        type: 'input',\n                        key: 'Branch.address1',\n                        expressionProperties: {\n                            //'templateOptions.disabled': 'model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_REQUIREMENTS').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_EXCEPTIONS').Value\n                        },\n                        templateOptions: {\n                            label: 'Address'\n                        }\n                    },\n                        {\n                             className: 'flex-1',\n                            type: 'select',\n                            key: 'Branch.City_Id',\n                            expressionProperties: {\n                               // 'templateOptions.disabled': 'model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_REQUIREMENTS').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_EXCEPTIONS').Value\n                            },\n                            templateOptions: {\n                                label: 'City',\n                                labelProp: 'Description',\n                                valueProp: 'City_Id',\n                                options: []\n                            }\n                            // ,\n                            // controller: function ($scope) {\n                            //     dropDown.getCities().success(function (data) {\n                            //         $scope.to.options = data;\n                            //     });\n                            // }\n                        },\n                        {\n                            className: 'col-sm-2',\n                            type: 'checkbox',\n                            key: 'contactlessMerchant',\n                            expressionProperties: {\n                               // 'templateOptions.disabled': 'model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_REQUIREMENTS').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_EXCEPTIONS').Value\n                            },\n                            templateOptions: {\n                                label: 'Contactless Merchant'\n                            }\n                        },\n                        {\n                            className: 'col-sm-2',\n                            type: 'select',\n                            key: 'Branch.MCC_Id',\n                            expressionProperties: {\n                                //'templateOptions.disabled': 'model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_REQUIREMENTS').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_EXCEPTIONS').Value\n                            },\n                            templateOptions: {\n                                label: 'MCC',\n                                labelProp: 'Description',\n                                valueProp: 'MCC_Id',\n                                options: []\n                            }\n                            // ,\n                            // controller: function ($scope) {\n                            //     dropDown.getMCC().success(function (data) {\n                            //         $scope.to.options = data;\n                            //     });\n                            // }\n                        }\n                    ]\n                },\n                {\n                    fieldGroupClassName: 'display-flex',\n                    fieldGroup: [{\n                         className: 'flex-1',\n                        type: 'input',\n                        key: 'Branch.address2',\n                        expressionProperties: {\n                           // 'templateOptions.disabled': 'model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_REQUIREMENTS').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_EXCEPTIONS').Value\n                        },\n                        templateOptions: {\n                            label: 'Addres 2 '\n                        }\n                    },\n                        {\n                             className: 'flex-1',\n                            type: 'input',\n                            key: 'contactPerson',\n                            expressionProperties: {\n                                // 'templateOptions.disabled': 'model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_REQUIREMENTS').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_EXCEPTIONS').Value\n                            },\n                            templateOptions: {\n                                label: 'Contact Person',\n                                required: true\n                            }\n                        },\n                        {\n                             className: 'flex-1',\n                            type: 'input',\n                            key: 'contactNumber',\n                            expressionProperties: {\n                                // 'templateOptions.disabled': 'model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_REQUIREMENTS').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_EXCEPTIONS').Value\n                            },\n                            templateOptions: {\n                                label: 'Contact Number'\n                            }\n                        }\n                    ]\n                },\n                {\n                    fieldGroupClassName: 'display-flex',\n                    fieldGroup: [{\n                         className: 'flex-1',\n                        type: 'input',\n                        key: 'Branch.address3',\n                        expressionProperties: {\n                            // 'templateOptions.disabled': 'model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_REQUIREMENTS').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_EXCEPTIONS').Value\n                        },\n                        templateOptions: {\n                            label: 'Addres 3 '\n                        }\n                    },\n                        {\n                             className: 'flex-1',\n                            type: 'input',\n                            key: 'numberOfTerminals',\n                            expressionProperties: {\n                                // 'templateOptions.disabled': 'model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_REQUIREMENTS').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_EXCEPTIONS').Value\n                            },\n                            templateOptions: {\n                                label: 'Number Of Terminals',\n                                pattern: '^\\\\d+$',\n                                pd: 'number'\n                            }\n                        },\n                        {\n                             className: 'flex-1',\n                            type: 'input',\n                            key: 'noOfPrintedSlips',\n                            expressionProperties: {\n                                // 'templateOptions.disabled': 'model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_REQUIREMENTS').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_EXCEPTIONS').Value\n                            },\n                            templateOptions: {\n                                label: 'No. Of Printed Slips',\n                                pattern: '^\\\\d+$',\n                                pd: 'number'\n                            }\n                        }\n                    ]\n                },\n                {\n                    fieldGroupClassName: 'display-flex',\n                    fieldGroup: [{\n                         className: 'flex-1',\n                        type: 'select',\n                        key: 'terminalBrandTypeModel',\n                        expressionProperties: {\n                            // 'templateOptions.disabled': 'model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_REQUIREMENTS').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_EXCEPTIONS').Value\n                        },\n                        templateOptions: {\n                            label: 'Terminal Brand/Type/Model',\n                            labelProp: 'Description',\n                            valueProp: 'TerminalBrandTypeModel_Id',\n                            options: []\n                        }\n                        // ,\n                        // controller: function ($scope) {\n                        //     dropDown.getTerminalBrandTypeModel().success(function (data) {\n                        //         $scope.to.options = data;\n                        //     });\n                        // }\n                    },\n                        {\n                             className: 'flex-1',\n                            type: 'select',\n                            key: 'reasonForThreeSlipPrinting',\n                            expressionProperties: {\n                               // 'templateOptions.disabled': 'model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_REQUIREMENTS').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_EXCEPTIONS').Value\n                            },\n                            templateOptions: {\n                                label: 'Reason For 3 Slip Printing',\n                                labelProp: 'Description',\n                                valueProp: 'ReasonForThreeSlipPrinting_Id',\n                                options: []\n                            }\n                            // ,\n                            // controller: function ($scope) {\n                            //     dropDown.getReasonForThreeSlipPrinting().success(function (data) {\n                            //         $scope.to.options = data;\n                            //     });\n                            // }\n                        },\n                        {\n                             className: 'flex-1',\n                            type: 'input',\n                            key: 'telcoProvider',\n                            expressionProperties: {\n                                // 'templateOptions.disabled': 'model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_REQUIREMENTS').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_EXCEPTIONS').Value\n                            },\n                            templateOptions: {\n                                label: 'Telco Provider'\n                            }\n                        }\n                    ]\n                },\n                {\n                    fieldGroupClassName: 'display-flex',\n                    fieldGroup: [{\n                         className: 'flex-1',\n                        type: 'select',\n                        key: 'simType',\n                        expressionProperties: {\n                            // 'templateOptions.disabled': 'model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_REQUIREMENTS').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_EXCEPTIONS').Value\n                        },\n                        templateOptions: {\n                            label: 'Sim Type',\n                            valueProp: 'SimType_Id',\n                            labelProp: 'Description',\n                            options: []\n                        }\n                        // ,\n                        // controller: function ($scope) {\n                        //     dropDown.getSimType().then(function (data) {\n                        //         $scope.to.options = data;\n                        //     })\n                        // }\n                    },\n                        {\n                             className: 'flex-1',\n                            type: 'calendar',\n                            key: 'dispatchDateTime',\n                          //  defaultValue: moment().format('MM/DD/YYYY'),\n                            expressionProperties: {\n                               // 'templateOptions.disabled': 'model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_REQUIREMENTS').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_EXCEPTIONS').Value\n                            },\n                            templateOptions: {\n                                label: 'Dispatch Date/Time'\n                            }\n                        },\n                        {\n                             className: 'flex-1',\n                            type: 'calendar',\n                            key: 'pullOutDateForTempGPRSTerminals',\n                           // defaultValue: moment().format('MM/DD/YYYY'),\n                            expressionProperties: {\n                               // 'templateOptions.disabled': 'model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_REQUIREMENTS').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_EXCEPTIONS').Value\n                            },\n                            templateOptions: {\n                                label: 'Pull Out Date For Temp GPRS Terminals'\n                            }\n                        }\n                    ]\n                },\n                {\n                    fieldGroupClassName: 'display-flex',\n                    fieldGroup: [{\n                         className: 'flex-1',\n                        type: 'input',\n                        key: 'reasonForGPRSInstallation',\n                        expressionProperties: {\n                           // 'templateOptions.disabled': 'model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_REQUIREMENTS').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_EXCEPTIONS').Value\n                        },\n                        templateOptions: {\n                            label: 'Reason For GPRS Installation'\n                        }\n                    },\n                        {\n                             className: 'flex-1',\n                            type: 'input',\n                            key: 'otherProfilingFacility',\n                            expressionProperties: {\n                               // 'templateOptions.disabled': 'model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_REQUIREMENTS').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_EXCEPTIONS').Value\n                            },\n                            templateOptions: {\n                                label: 'Other Profiling Facility'\n                            }\n                        },\n                        {\n                             className: 'flex-1',\n                            type: 'calendar',\n                            key: 'ARISCheckUpdateTime',\n                           // defaultValue: moment().format('MM/DD/YYYY'),\n                            expressionProperties: {\n                               // 'templateOptions.disabled': 'model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_REQUIREMENTS').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_EXCEPTIONS').Value\n                            },\n                            templateOptions: {\n                                label: 'ARIS Check Update Time',\n                                placeholder:'ARIS CheckUp date'\n\n                            }\n                        }\n                    ]\n                },\n                {\n                    fieldGroupClassName: 'display-flex',\n                    fieldGroup: [{\n                         className: 'flex-1',\n                        type: 'input',\n                        key: 'ARISDownloadTime',\n                        //defaultValue: moment().format('MM/DD/YYYY'),\n                        expressionProperties: {\n                           // 'templateOptions.disabled': 'model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_REQUIREMENTS').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_EXCEPTIONS').Value\n                        },\n                        templateOptions: {\n                            label: 'ARIS Download Time'\n                        }\n                    },\n                        {\n                             className: 'flex-1',\n                            type: 'input',\n                            key: 'merchantPrepaid',\n                            expressionProperties: {\n                               // 'templateOptions.disabled': 'model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_REQUIREMENTS').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_EXCEPTIONS').Value\n                            },\n                            templateOptions: {\n                                label: 'Merchant Prepaid'\n                            }\n                        }\n                        , {\n                            key: 'cardPlan',\n                            type: 'select',\n                             className: 'flex-1',\n                            expressionProperties: {\n                                //'templateOptions.disabled': 'model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_REQUIREMENTS').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_EXCEPTIONS').Value\n                            },\n                            templateOptions: {\n                                required: true,\n                                label: 'Card Plans',\n                                options: [],\n                                valueProp: 'CardPlans_Id',\n                                labelProp: 'Description'\n                            }\n                            // ,\n                            // controller: function ($scope) {\n                            //     dropDown.getCardPlans().success(function (data) {\n                            //         $scope.to.options = data;\n                            //     });\n                            // }\n                        }\n\n\n\n                    ]\n                },\n\n                {\n                    fieldGroupClassName: 'display-flex',\n                    fieldGroup: [{\n                        className: 'flex-6',\n                        type: 'textarea',\n                        key: 'remarks',\n                        expressionProperties: {\n                            //'templateOptions.disabled': 'model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_REQUIREMENTS').Value + ' || model.requestStatus == ' + requestStatusService.assignRequestStatus('FOR_APPROVAL_WITH_EXCEPTIONS').Value\n                        },\n                        templateOptions: {\n                            label: 'Remarks',\n                            rows: 2\n                        }\n                    }]\n                }\n            ];\n     \n  constructor() { }\n  getPosFields(): FormlyFieldConfig[]{\n\n\t\treturn this.fields;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}